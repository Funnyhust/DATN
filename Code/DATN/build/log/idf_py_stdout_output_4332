[1/11] Performing build step for 'bootloader'
[1/1] C:\Windows\system32\cmd.exe /C "cd /D C:\ESP32-PRJ\DATN\Code\DATN\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/ESP32-PRJ/DATN/Code/DATN/build/bootloader/bootloader.bin"
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/buzzer/buzzer.c.obj
[6/11] Linking C static library esp-idf\main\libmain.a
[7/11] Generating ld/sections.ld
[8/11] Linking CXX executable DATN.elf
[9/11] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/ESP32-PRJ/DATN/Code/DATN/build/DATN.bin
[10/11] C:\Windows\system32\cmd.exe /C "cd /D C:\ESP32-PRJ\DATN\Code\DATN\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/ESP32-PRJ/DATN/Code/DATN/build/partition_table/partition-table.bin C:/ESP32-PRJ/DATN/Code/DATN/build/DATN.bin"
DATN.bin binary size 0x35620 bytes. Smallest app partition is 0x100000 bytes. 0xca9e0 bytes (79%) free.
[10/11] C:\Windows\system32\cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.4.1\components\esptool_py && C:\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.4.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/ESP32-PRJ/DATN/Code/DATN/build -P C:/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32s3 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 DATN.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM5
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE
Crystal is 40MHz
MAC: ec:da:3b:5e:22:a8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00045fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21024 bytes to 13390...
Writing at 0x00000000... (100 %)
Wrote 21024 bytes (13390 compressed) at 0x00000000 in 0.5 seconds (effective 358.0 kbit/s)...
Hash of data verified.
Compressed 218656 bytes to 116358...
Writing at 0x00010000... (12 %)
Writing at 0x0001cba0... (25 %)
Writing at 0x0002302a... (37 %)
Writing at 0x0002989c... (50 %)
Writing at 0x0002fcca... (62 %)
Writing at 0x00038335... (75 %)
Writing at 0x0003e1ce... (87 %)
Writing at 0x00044abb... (100 %)
Wrote 218656 bytes (116358 compressed) at 0x00010000 in 2.0 seconds (effective 869.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 314.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
